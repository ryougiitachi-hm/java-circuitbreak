server:
  port: 8080

# spring boot actuator
management:
  endpoints:
    web:
      exposure:
        # * is not available
        include: health,info
#        include: *
    health:
      show-details: always

# resilience4j
# Please refer to https://resilience4j.readme.io/docs/getting-started-3#configuration for the complete config
resilience4j.circuitbreaker:
  # io.github.resilience4j.common.circuitbreaker.configuration.CircuitBreakerConfigurationProperties.InstanceProperties
#  circuitbreaker:
#  metrics:
#    enabled: true
#  configs:
#    default:
#      registerHealthIndicator: true
#      permittedNumberOfCallsInHalfOpenState: 2
#      slidingWindowType: COUNT_BASED
#      slidingWindowSize: 2
#      minimumNumberOfCalls: 2
#      waitDurationInOpenState: 5s
#      failureRateThreshold: 50
#      slowCallRateThreshold: 50
#      slowCallDurationThreshold: 50ms
#    redis-mock:
#      registerHealthIndicator: true
#      permittedNumberOfCallsInHalfOpenState: 2
#      slidingWindowType: COUNT_BASED
#      slidingWindowSize: 2
#      minimumNumberOfCalls: 2
#      waitDurationInOpenState: 5s
#      failureRateThreshold: 50
#      slowCallRateThreshold: 50
#      slowCallDurationThreshold: 50ms
  instances:
    redis-mock:
      registerHealthIndicator: true
      permittedNumberOfCallsInHalfOpenState: 2
      slidingWindowType: COUNT_BASED
      slidingWindowSize: 2
      minimumNumberOfCalls: 2
      waitDurationInOpenState: 5s
      failureRateThreshold: 65
      slowCallRateThreshold: 50
      slowCallDurationThreshold: 50ms
#        eventConsumerBufferSize: 10
#        recordFailurePredicate: io.github.robwin.exception.RecordFailurePredicate

resilience4j.bulkhead:
  instances:
    backendA:
      maxConcurrentCalls: 10
    backendB:
      maxWaitDuration: 10ms
      maxConcurrentCalls: 20

resilience4j.thread-pool-bulkhead:
  instances:
    backendC:
      maxThreadPoolSize: 1
      coreThreadPoolSize: 1
      queueCapacity: 1

resilience4j.retry:
  instances:
    redis-mock:
      maxAttempts: 1
      waitDuration: 50ms
      enableExponentialBackoff: true
      exponentialBackoffMultiplier: 2
#        retryExceptions:
#          - org.springframework.web.client.HttpServerErrorException
#          - java.io.IOException
#        ignoreExceptions:
#          - io.github.robwin.exception.BusinessException